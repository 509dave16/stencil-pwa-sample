/**
 * This is an autogenerated file created by the Stencil build process.
 * It contains typing information for all components that exist in this project
 * and imports for stencil collections that might be configured in your stencil.config.js file
 */

import '@stencil/core';

declare global {
  namespace JSX {
    interface Element {}
    export interface IntrinsicElements {}
  }
  namespace JSXElements {}

  interface HTMLElement {
    componentOnReady?: () => Promise<this | null>;
  }

  interface HTMLStencilElement extends HTMLElement {
    componentOnReady(): Promise<this>;

    forceUpdate(): void;
  }

  interface HTMLAttributes {}
}

import '@stencil/router';
import '@stencil/state-tunnel';

import {
  RouterHistory,
} from '@stencil/router';

declare global {

  namespace StencilComponents {
    interface AppHome {

    }
  }

  interface HTMLAppHomeElement extends StencilComponents.AppHome, HTMLStencilElement {}

  var HTMLAppHomeElement: {
    prototype: HTMLAppHomeElement;
    new (): HTMLAppHomeElement;
  };
  interface HTMLElementTagNameMap {
    'app-home': HTMLAppHomeElement;
  }
  interface ElementTagNameMap {
    'app-home': HTMLAppHomeElement;
  }
  namespace JSX {
    interface IntrinsicElements {
      'app-home': JSXElements.AppHomeAttributes;
    }
  }
  namespace JSXElements {
    export interface AppHomeAttributes extends HTMLAttributes {

    }
  }
}


declare global {

  namespace StencilComponents {
    interface AppProfile {
      'history': RouterHistory;
      'name': string;
    }
  }

  interface HTMLAppProfileElement extends StencilComponents.AppProfile, HTMLStencilElement {}

  var HTMLAppProfileElement: {
    prototype: HTMLAppProfileElement;
    new (): HTMLAppProfileElement;
  };
  interface HTMLElementTagNameMap {
    'app-profile': HTMLAppProfileElement;
  }
  interface ElementTagNameMap {
    'app-profile': HTMLAppProfileElement;
  }
  namespace JSX {
    interface IntrinsicElements {
      'app-profile': JSXElements.AppProfileAttributes;
    }
  }
  namespace JSXElements {
    export interface AppProfileAttributes extends HTMLAttributes {
      'history'?: RouterHistory;
      'name'?: string;
    }
  }
}


declare global {

  namespace StencilComponents {
    interface MyApp {

    }
  }

  interface HTMLMyAppElement extends StencilComponents.MyApp, HTMLStencilElement {}

  var HTMLMyAppElement: {
    prototype: HTMLMyAppElement;
    new (): HTMLMyAppElement;
  };
  interface HTMLElementTagNameMap {
    'my-app': HTMLMyAppElement;
  }
  interface ElementTagNameMap {
    'my-app': HTMLMyAppElement;
  }
  namespace JSX {
    interface IntrinsicElements {
      'my-app': JSXElements.MyAppAttributes;
    }
  }
  namespace JSXElements {
    export interface MyAppAttributes extends HTMLAttributes {

    }
  }
}


declare global {

  namespace StencilComponents {
    interface RxdbShowcase {
      'authorId': string;
      'authors': any[];
      'bookTitle': string;
      'books': any[];
      'detachAuthorId': string;
      'detachBookId': string;
      'newAuthorId': string;
    }
  }

  interface HTMLRxdbShowcaseElement extends StencilComponents.RxdbShowcase, HTMLStencilElement {}

  var HTMLRxdbShowcaseElement: {
    prototype: HTMLRxdbShowcaseElement;
    new (): HTMLRxdbShowcaseElement;
  };
  interface HTMLElementTagNameMap {
    'rxdb-showcase': HTMLRxdbShowcaseElement;
  }
  interface ElementTagNameMap {
    'rxdb-showcase': HTMLRxdbShowcaseElement;
  }
  namespace JSX {
    interface IntrinsicElements {
      'rxdb-showcase': JSXElements.RxdbShowcaseAttributes;
    }
  }
  namespace JSXElements {
    export interface RxdbShowcaseAttributes extends HTMLAttributes {
      'authorId'?: string;
      'authors'?: any[];
      'bookTitle'?: string;
      'books'?: any[];
      'detachAuthorId'?: string;
      'detachBookId'?: string;
      'newAuthorId'?: string;
    }
  }
}


declare global {

  namespace StencilComponents {
    interface SuperloginServiceInjector {
      'create': () => Promise<any>;
    }
  }

  interface HTMLSuperloginServiceInjectorElement extends StencilComponents.SuperloginServiceInjector, HTMLStencilElement {}

  var HTMLSuperloginServiceInjectorElement: {
    prototype: HTMLSuperloginServiceInjectorElement;
    new (): HTMLSuperloginServiceInjectorElement;
  };
  interface HTMLElementTagNameMap {
    'superlogin-service-injector': HTMLSuperloginServiceInjectorElement;
  }
  interface ElementTagNameMap {
    'superlogin-service-injector': HTMLSuperloginServiceInjectorElement;
  }
  namespace JSX {
    interface IntrinsicElements {
      'superlogin-service-injector': JSXElements.SuperloginServiceInjectorAttributes;
    }
  }
  namespace JSXElements {
    export interface SuperloginServiceInjectorAttributes extends HTMLAttributes {

    }
  }
}


declare global {

  namespace StencilComponents {
    interface UserLogin {
      'history': RouterHistory;
    }
  }

  interface HTMLUserLoginElement extends StencilComponents.UserLogin, HTMLStencilElement {}

  var HTMLUserLoginElement: {
    prototype: HTMLUserLoginElement;
    new (): HTMLUserLoginElement;
  };
  interface HTMLElementTagNameMap {
    'user-login': HTMLUserLoginElement;
  }
  interface ElementTagNameMap {
    'user-login': HTMLUserLoginElement;
  }
  namespace JSX {
    interface IntrinsicElements {
      'user-login': JSXElements.UserLoginAttributes;
    }
  }
  namespace JSXElements {
    export interface UserLoginAttributes extends HTMLAttributes {
      'history'?: RouterHistory;
    }
  }
}


declare global {

  namespace StencilComponents {
    interface UserSignup {
      'history': RouterHistory;
    }
  }

  interface HTMLUserSignupElement extends StencilComponents.UserSignup, HTMLStencilElement {}

  var HTMLUserSignupElement: {
    prototype: HTMLUserSignupElement;
    new (): HTMLUserSignupElement;
  };
  interface HTMLElementTagNameMap {
    'user-signup': HTMLUserSignupElement;
  }
  interface ElementTagNameMap {
    'user-signup': HTMLUserSignupElement;
  }
  namespace JSX {
    interface IntrinsicElements {
      'user-signup': JSXElements.UserSignupAttributes;
    }
  }
  namespace JSXElements {
    export interface UserSignupAttributes extends HTMLAttributes {
      'history'?: RouterHistory;
    }
  }
}

declare global { namespace JSX { interface StencilJSX {} } }
